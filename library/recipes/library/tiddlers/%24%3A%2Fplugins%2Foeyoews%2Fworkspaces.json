{"title":"$:/plugins/oeyoews/workspaces","description":"workspaces","author":"oeyoews","version":"0.0.1","core-version":">=5.3.1","type":"application/json","plugin-type":"plugin","name":"workspaces","list":"readme","dependents":"","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/workspaces/readme\":{\"title\":\"$:/plugins/oeyoews/workspaces/readme\",\"text\":\"正在制作中 ...\\r\\n\"},\"$:/plugins/oeyoews/workspaces/workspaces-widget.js\":{\"title\":\"$:/plugins/oeyoews/workspaces/workspaces-widget.js\",\"text\":\"/*\\\\\\r\\ntitle: $:/plugins/oeyoews/workspaces/workspaces-widget.js\\r\\ntype: application/javascript\\r\\nmodule-type: widget\\r\\n\\r\\n\\\\*/\\r\\n\\r\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\r\\n\\r\\nclass WorkSpacesWidget extends Widget {\\r\\n  constructor(parseTreeNode, options) {\\r\\n    super(parseTreeNode, options);\\r\\n  }\\r\\n\\r\\n  render(parent, nextSibling) {\\r\\n    this.parentDomNode = parent;\\r\\n    this.computeAttributes();\\r\\n    this.execute();\\r\\n\\r\\n    const createElement = $tw.utils.domMaker;\\r\\n    const wiki = $tw.wiki;\\r\\n    const storyListTiddler = '$:/StoryList';\\r\\n    const workspaceDataTiddler = '$:/workspaces';\\r\\n\\r\\n    const { workspace = 'new' } = this.attributes;\\r\\n\\r\\n    // draft 自动会用双引号, 这里暂不处理\\r\\n    const getCurrentStoryList = () => {\\r\\n      const { list } = wiki.getTiddler(storyListTiddler).fields || [];\\r\\n      return list.filter((title) => !title.startsWith('Draft of')).join(' ');\\r\\n    };\\r\\n\\r\\n    const saveCurrentStoryList = () => {\\r\\n      const currentList = getCurrentStoryList();\\r\\n      wiki.setText(workspaceDataTiddler, 'one', null, currentList);\\r\\n    };\\r\\n\\r\\n    // save and new\\r\\n    const createNewWorkspace = () => {\\r\\n      saveCurrentStoryList();\\r\\n      setWorkspace();\\r\\n    };\\r\\n\\r\\n    const setWorkspace = (list = '') => {\\r\\n      wiki.setText(storyListTiddler, 'list', null, list); // create\\r\\n    };\\r\\n\\r\\n    // list all workspace, and support click to switch\\r\\n    const listAllWorkspaces = () => {};\\r\\n\\r\\n    const getoneWorkSpace = () => {\\r\\n      const { one: oneList } = wiki.getTiddler(workspaceDataTiddler)?.fields;\\r\\n      return oneList;\\r\\n    };\\r\\n\\r\\n    // maybe use timestamp\\r\\n    const getPreviousWorkspace = () => {\\r\\n      const oneList = getoneWorkSpace();\\r\\n      setWorkspace(oneList);\\r\\n    };\\r\\n\\r\\n    // DONE: create new workspace\\r\\n    // TODO: switch workspace\\r\\n    // workspace naming\\r\\n    // reset, next, previous, recycle\\r\\n    const domNode = createElement('button', {\\r\\n      text: workspace,\\r\\n    });\\r\\n\\r\\n    function main() {\\r\\n      console.log(workspace);\\r\\n      switch (workspace) {\\r\\n        case 'new':\\r\\n          createNewWorkspace();\\r\\n          console.log('create new workspace');\\r\\n          break;\\r\\n        case 'previous':\\r\\n          getPreviousWorkspace();\\r\\n          console.log('previous');\\r\\n          break;\\r\\n        default:\\r\\n        //   nothing;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    domNode.addEventListener('click', main);\\r\\n\\r\\n    parent.insertBefore(domNode, nextSibling);\\r\\n    this.domNodes.push(domNode);\\r\\n  }\\r\\n}\\r\\n\\r\\nexports.workspaces = WorkSpacesWidget;\\r\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}