{"title":"$:/plugins/oeyoews/book-status","description":"book-status","author":"oeyoews","version":"0.0.1","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"book-status","meat#disabled":"yes","dependents":"$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/book-status/readme\":{\"title\":\"$:/plugins/oeyoews/book-status/readme\",\"text\":\"* book status\\n\\n* viewtemplate(filter: $:/plugins/books/)\\n\\n* getstorytiddler\\n\\n* click event\\n* status json\\n* 也许可以借助localstorage当作临时状态(), 最后结束是, 询问是否要保存此次阅读记录, 通知阅读时间\\n\\n* 如何获取每个笔记的书名, 通过sourceTiddler, 或者获取tag, 每本书只有一个tag\",\"type\":\"text/markdown\",\"description\":\"book-status\"},\"$:/plugins/oeyoews/book-status/widget.js\":{\"title\":\"$:/plugins/oeyoews/book-status/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/book-status/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nbook-status widget\\n\\n\\\\*/\\nconst { jsonStringify, log } = require('$:/core/modules/utils/utils.js');\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\n\\nclass BookStatusWidget extends Widget {\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n    this.configfile = 'bookstatus.json';\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n    this.parentDomNode = parent;\\n    this.computeAttributes();\\n    this.execute();\\n\\n    const createElement = $tw.utils.domMaker;\\n    const wiki = $tw.wiki;\\n\\n    const createConfigFile = () => {\\n      // may set map\\n      let config = null;\\n      if (!wiki.tiddlerExists(this.configfile)) {\\n        wiki.addTiddler({\\n          type: 'application/json',\\n          title: 'bookstatus.json',\\n          text: '',\\n        });\\n        this.parentWidget.dispatchEvent({\\n          type: 'om-notify',\\n          paramObject: {\\n            title: `create ${this.configfile} config file`,\\n          },\\n        });\\n      } else {\\n        // default config\\n        config = wiki.getTiddlerData(this.configfile) || {};\\n        const title = this.getVariable('storyTiddler');\\n        if (title.startsWith('Draft of')) return;\\n        const pluginname = wiki.getShadowSource(title);\\n        if (!pluginname) return;\\n        const { book } = wiki.getTiddler(pluginname).fields;\\n        if (!book) return;\\n        let status = config?.[book]?.[title];\\n        status = status === '已读' ? '未读' : '已读';\\n        const obj = {\\n          [book]: {\\n            [title]: status,\\n          },\\n        };\\n        Object.assign(config, obj);\\n        wiki.setText(this.configfile, 'text', null, JSON.stringify(config));\\n        this.parentWidget.dispatchEvent({\\n          type: 'om-notify',\\n          paramObject: {\\n            // TODO: success or info for book status\\n            status: 'info',\\n            title: title,\\n            text: `Update ${status}`,\\n          },\\n        });\\n      }\\n    };\\n\\n    const btn = createElement('button', {\\n      // TODO: status\\n      text: `update ${this.configfile} `,\\n      class: 'p-2',\\n      attributes: {},\\n    });\\n\\n    btn.addEventListener('click', createConfigFile);\\n\\n    const domNode = createElement('div', {\\n      children: [btn],\\n    });\\n\\n    parent.insertBefore(domNode, nextSibling);\\n    this.domNodes.push(domNode);\\n  }\\n}\\n\\n/**\\n * @description book-status widget\\n * @param\\n */\\nexports.bookstatus = BookStatusWidget;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}