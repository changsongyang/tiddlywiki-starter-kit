{"title":"$:/plugins/oeyoews/tabs","description":"tabs","author":"oeyoews","version":"0.0.1","core-version":">=5.3.1","type":"application/json","plugin-type":"plugin","name":"tabs","meat#disabled":"yes","qrcode":"yes","dependents":"$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/tabs/readme\":{\"title\":\"$:/plugins/oeyoews/tabs/readme\",\"text\":\"## Tabs\\n\",\"type\":\"text/markdown\",\"description\":\"tabs\"},\"$:/plugins/oeyoews/tabs/widget.js\":{\"title\":\"$:/plugins/oeyoews/tabs/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/tabs/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\ntabs widget\\n\\n\\\\*/\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\n\\nclass TabsWidget extends Widget {\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n    this.parentDomNode = parent;\\n    this.computeAttributes();\\n    this.execute();\\n\\n    const { tiddlers = 'HMAC' } = this.attributes;\\n    const createElement = $tw.utils.domMaker;\\n\\n    const buttonsContainer = this.document.createElement('div');\\n    buttonsContainer.className = 'rounded flex justify-center items-center';\\n    const buttons = this.document.createElement('div');\\n    buttons.className = 'space-x-2 bg-neutral-100 p-2 rounded';\\n    buttonsContainer.append(buttons);\\n\\n    let children = [buttonsContainer];\\n    tiddlers.split(' ').forEach((tiddler) => {\\n      const btn = this.document.createElement('button');\\n      btn.textContent = tiddler;\\n      btn.className = 'p-2 rounded bg-neutral-200';\\n      buttons.append(btn);\\n      const content = document.createElement('div');\\n      const tiddlerContent = $tw.wiki.renderTiddler('text/html', tiddler);\\n      content.innerHTML = tiddlerContent;\\n      children.push(content);\\n    });\\n\\n    const domNode = createElement('div', {\\n      children,\\n    });\\n\\n    parent.insertBefore(domNode, nextSibling);\\n    this.domNodes.push(domNode);\\n  }\\n}\\n\\n/**\\n * @description tabs widget\\n * @param\\n */\\nexports.tabs = TabsWidget;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}