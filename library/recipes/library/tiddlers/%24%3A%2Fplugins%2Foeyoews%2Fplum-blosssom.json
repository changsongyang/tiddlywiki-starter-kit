{"title":"$:/plugins/oeyoews/plum-blosssom","description":"plum-blosssom","author":"oeyoews","version":"0.0.1","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"plum-blosssom","meat#disabled":"yes","qrcode":"yes","created":"2023-12-30","dependents":"$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/plum-blosssom/readme\":{\"title\":\"$:/plugins/oeyoews/plum-blosssom/readme\",\"text\":\"<!-- plugin template readme -->\\n\\n## Motivation\\n\\n<!-- your plugin motivation, or why you write this plugin -->\\n\",\"type\":\"text/markdown\",\"description\":\"plum-blosssom\"},\"$:/plugins/oeyoews/plum-blosssom/pageTemplate\":{\"title\":\"$:/plugins/oeyoews/plum-blosssom/pageTemplate\",\"tags\":\"$:/tags/PageTemplate\",\"text\":\"<!-- TODO: only on homepage -->\\n<div class=\\\"fixed inset-0 pointer-events-none print:hidden -z-[1]\\\">\\n\\t<$plum />\\n</div>\"},\"$:/plugins/oeyoews/plum-blosssom/plum.js\":{\"title\":\"$:/plugins/oeyoews/plum-blosssom/plum.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/plum-blosssom/plum.js\\ntype: application/javascript\\nmodule-type: library\\n\\n\\\\*/\\n\\nmodule.exports = function (canvas) {\\n  function initCanvas(canvas, width = 400, height = 400, _dpi) {\\n    const ctx = canvas.getContext('2d');\\n\\n    const dpr = window.devicePixelRatio || 1;\\n    const bsr =\\n      ctx.webkitBackingStorePixelRatio ||\\n      ctx.mozBackingStorePixelRatio ||\\n      ctx.msBackingStorePixelRatio ||\\n      ctx.oBackingStorePixelRatio ||\\n      ctx.backingStorePixelRatio ||\\n      1;\\n    const dpi = _dpi || dpr / bsr;\\n\\n    canvas.style.width = `${width}px`;\\n    canvas.style.height = `${height}px`;\\n    canvas.width = dpi * width;\\n    canvas.height = dpi * height;\\n    ctx.scale(dpi, dpi);\\n    return { ctx, dpi };\\n  }\\n  const { ctx } = initCanvas(canvas, window.innerWidth, window.innerHeight);\\n\\n  function lineTo(p1, p2) {\\n    ctx.beginPath();\\n    ctx.moveTo(p1.x, p1.y);\\n    ctx.lineTo(p2.x, p2.y);\\n    ctx.stroke();\\n  }\\n\\n  function getEndPoint(b) {\\n    return {\\n      x: b.start.x + b.length * Math.cos(b.theta),\\n      y: b.start.y + b.length * Math.sin(b.theta)\\n    };\\n  }\\n\\n  function drawBranch(b) {\\n    lineTo(b.start, getEndPoint(b));\\n  }\\n\\n  function step(b, depth = 0) {\\n    const end = getEndPoint(b);\\n    drawBranch(b);\\n\\n    if (depth < 4 || Math.random() < 0.5) {\\n      pendingTasks.push(() =>\\n        step(\\n          {\\n            start: end,\\n            length: b.length + (Math.random() * 2 - 1),\\n            theta: b.theta - 0.2 * Math.random()\\n          },\\n          depth + 1\\n        )\\n      );\\n    }\\n\\n    if (depth < 4 || Math.random() < 0.5) {\\n      pendingTasks.push(() =>\\n        step(\\n          {\\n            start: end,\\n            length: b.length + (Math.random() * 2 - 1),\\n            theta: b.theta + 0.2 * Math.random()\\n          },\\n          depth + 1\\n        )\\n      );\\n    }\\n  }\\n\\n  function frame() {\\n    const tasks = [];\\n    pendingTasks = pendingTasks.filter((i) => {\\n      if (Math.random() > 0.4) {\\n        tasks.push(i);\\n        return false;\\n      }\\n      return true;\\n    });\\n\\n    tasks.forEach((fn) => fn());\\n  }\\n\\n  let pendingTasks = [];\\n\\n  let framesCount = 0;\\n  function startFrame() {\\n    requestAnimationFrame(() => {\\n      framesCount += 1;\\n      if (framesCount % 3 === 0) frame();\\n      startFrame();\\n    });\\n  }\\n\\n  startFrame();\\n\\n  function plum() {\\n    // light\\n    ctx.strokeStyle = '#0005';\\n\\n    step({\\n      start: { x: 0, y: 0 },\\n      length: 10,\\n      theta: Math.PI / 4\\n    });\\n  }\\n  plum();\\n};\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/plum-blosssom/widget.js\":{\"title\":\"$:/plugins/oeyoews/plum-blosssom/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/plum-blosssom/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nplum-blosssom widget\\n\\n\\\\*/\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\n\\nclass PlumWidget extends Widget {\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n    this.parentDomNode = parent;\\n    this.computeAttributes();\\n    this.execute();\\n\\n    const canvas = document.createElement('canvas');\\n    canvas.id = 'plum-blosssom';\\n\\n    const plum = require('./plum');\\n    plum(canvas);\\n\\n    parent.insertBefore(canvas, nextSibling);\\n    this.domNodes.push(canvas);\\n  }\\n}\\n\\n/**\\n * @description plum-blosssom widget\\n */\\nexports.plum = PlumWidget;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}