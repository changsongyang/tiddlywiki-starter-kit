{"title":"$:/plugins/oeyoews/neotw-pwa","description":"","author":"oeyoews","version":"0.0.1","core-version":">=5.3.0","type":"application/json","parent-plugin":"$:/plugins/oeyoews/neotw","plugin-type":"plugin","name":"Neotw Pwa","dependents":"$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/neotw-pwa/Action\":{\"title\":\"$:/plugins/oeyoews/neotw-pwa/Action\",\"tags\":\"$:/tags/StartupAction/PostRender\",\"text\":\"<$list filter=\\\"[{$:/info/url/search}match[?layout=neotw-pwa]]\\\">\\n  <$action-setfield $tiddler=\\\"$:/layout\\\" text=\\\"$:/plugins/oeyoews/neotw-pwa/Layout\\\"/>\\n</$list>\"},\"$:/plugins/oeyoews/neotw-pwa/Layout\":{\"title\":\"$:/plugins/oeyoews/neotw-pwa/Layout\",\"tags\":\"$:/tags/Layout\",\"name\":\"{{$:/plugins/oeyoews/neotw-pwa/icon}}\",\"description\":\"{{$:/plugins/oeyoews/neotw-pwa/readme!!description}}\",\"text\":\"\\\\import [[$:/core/ui/PageMacros]] [all[shadows+tiddlers]tag[$:/tags/Macro]!has[draft.of]]\\n\\n<$vars\\n\\ttv-config-toolbar-icons={{$:/config/Toolbar/Icons}}\\n\\ttv-config-toolbar-text={{$:/config/Toolbar/Text}}\\n\\ttv-config-toolbar-class={{$:/config/Toolbar/ButtonClass}}\\n\\ttv-enable-drag-and-drop={{$:/config/DragAndDrop/Enable}}\\n\\ttv-show-missing-links={{$:/config/MissingLinks}}\\n\\tstoryviewTitle={{$:/view}}\\n\\tlanguageTitle={{{ [{$:/language}get[name]] }}}>\\n\\n<div class=\\\"prose max-w-none prose-indigo m-auto sm:w-auto md:w-2/3\\\">\\n  {{{ [[$:/plugins/oeyoews/neotw-pwa/readme]] ||$:/core/ui/ViewTemplate }}}\\n</div>\"},\"$:/plugins/oeyoews/neotw-pwa/readme\":{\"title\":\"$:/plugins/oeyoews/neotw-pwa/readme\",\"description\":\"\",\"text\":\"{{$:/languages/neotw-pwa/readme}}\\n\"},\"$:/plugins/oeyoews/neotw-pwa/routes/get-manifest.js\":{\"title\":\"$:/plugins/oeyoews/neotw-pwa/routes/get-manifest.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-pwa/routes/get-manifest.js\\ntype: application/javascript\\nmodule-type: route\\n\\nGET /manifest.json\\n\\n\\\\*/\\n\\n// (function () {\\n//   /*jslint node: true, browser: true */\\n//   /*global $tw: false */\\n//   \\\"use strict\\\";\\n//\\n//   exports.method = \\\"GET\\\";\\n//\\n//   exports.path = /^\\\\/manifest.json$/;\\n//\\n//   exports.handler = function (request, response, state) {\\n//     var buffer = state.wiki.getTiddlerText(\\\"$:/manifest.json\\\", \\\"\\\"); // 修改文件名\\n//     state.sendResponse(200, { \\\"Content-Type\\\": \\\"application/json\\\" }, buffer);\\n//   };\\n// })();\\n\\n// 也许我们可以尝试模仿favicon.ico, 支持manifest, 构建的时候也可以自动生成在根目录下, 唯一的区别就是manifest.json只在启动的时候寻找, 之后不会自动刷新, 暂时放在file文件夹内, server和online共用一个文件(需要修改link /manifest.json -> /files/manifest.json)\\n(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  \\\"use strict\\\";\\n\\n  exports.method = \\\"GET\\\";\\n\\n  // 设置路径以匹配 manifest.json 文件\\n  exports.path = /^\\\\/files\\\\/manifest\\\\.json$/;\\n\\n  exports.handler = function (request, response, state) {\\n    var path = require(\\\"path\\\"),\\n      fs = require(\\\"fs\\\"),\\n      baseFilename = path.resolve(state.boot.wikiPath, \\\"files\\\"),\\n      filename = path.resolve(baseFilename, \\\"manifest.json\\\");\\n\\n    fs.readFile(filename, function (err, content) {\\n      var status,\\n        type = \\\"application/json\\\";\\n      if (err) {\\n        console.log(\\\"Error accessing file \\\" + filename + \\\": \\\" + err.toString());\\n        status = 404;\\n        content = JSON.stringify({ error: \\\"File 'manifest.json' not found\\\" });\\n      } else {\\n        status = 200;\\n      }\\n      state.sendResponse(status, { \\\"Content-Type\\\": type }, content);\\n    });\\n  };\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"route\"},\"$:/languages/neotw-pwa/readme\":{\"title\":\"$:/languages/neotw-pwa/readme\",\"text\":\"<div class=\\\"prose max-w-none prose-indigo\\\">\\n\\n* [[Source|https://github.com/oeyoews/neotw/tree/main/plugins/oeyoews/neotw-pwa]]\\n* [[Demo|https://oeyoews.github.io/neotw]]\\n\\n让你的tiddlywiki网页可以安装, 注意需要本地需要获取files/文件夹内的图片, 具体请看 $:/manifest.json\\n\\n!! Note\\n\\n* localhost: 需要提前有manifest.json, 或者让get-menifest.json 变成shadow, 以保证启动的时候可以正确读取menifest.json即可, 注意使用startupaction 修改变成shadow 是无效的\\n* online: 如果构建成了index.html静态文件, 需要复制manifest.json到根目录\\n\\n> 不支持http\\n> 2023 年, server-worker不再是 PWA 的必选项\\n\\n!! Tools\\n\\nhttps://maskable.app/editor\\n\\n</div>\"},\"$:/manifest.json\":{\"title\":\"$:/manifest.json\",\"type\":\"application/json\",\"text\":\"{\\n  \\\"short_name\\\": \\\"tiddlywiki\\\",\\n  \\\"name\\\": \\\"tiddlywiki\\\",\\n  \\\"icons\\\": [\\n    {\\n      \\\"src\\\": \\\"/files/tiddlywiki.png\\\",\\n      \\\"sizes\\\": \\\"512x512\\\",\\n      \\\"type\\\": \\\"image/png\\\"\\n    }\\n  ],\\n  \\\"id\\\": \\\"/\\\",\\n  \\\"start_url\\\": \\\"/\\\",\\n  \\\"background_color\\\": \\\"#F5F5EE\\\",\\n  \\\"display\\\": \\\"standalone\\\",\\n  \\\"scope\\\": \\\"/\\\",\\n  \\\"theme_color\\\": \\\"#F5F5EE\\\",\\n  \\\"description\\\": \\\"tiddlywiki\\\"\\n}\"},\"$:/plugins/oeyoews/neotw-pwa/meta\":{\"title\":\"$:/plugins/oeyoews/neotw-pwa/meta\",\"tags\":\"$:/tags/RawMarkupWikified/TopHead\",\"text\":\"`<link rel=\\\"manifest\\\" href=\\\"/files/manifest.json\\\" />`\"}}}"}