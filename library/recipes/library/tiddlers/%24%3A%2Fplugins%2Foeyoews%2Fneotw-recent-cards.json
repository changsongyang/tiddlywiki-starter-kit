{"title":"$:/plugins/oeyoews/neotw-recent-cards","description":"neotw-recent-cards","author":"oeyoews","version":"0.0.5","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"neotw-recent-cards","dependents":"$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/neotw-recent-cards/readme\":{\"title\":\"$:/plugins/oeyoews/neotw-recent-cards/readme\",\"description\":\"卡片视图\",\"text\":\"!! 使用方法\\n\\n```bash\\n<$cards />\\n\\n## 可选参数filter, filter 默认为 [!is[system]!has[draft.of]!sort[created]limit[9]]\\n<$cards filter=\\\"[tag[Journal]limit[9]]\\\"/>\\n\\n## 指定某一个(或者多个)固定tiddler\\n<$cards filter=\\\"[[$:/core/ui/ControlPanel/Plugins]] [[GettingStarted]]\\\" />\\n\\n## 杂合(混用)\\n## tiddler 的筛选器用法没有明确的术语表达,导致教程只能`show me the code`, 不像大众化的编程语言(比如JS,React,Vue),官方统一制定了术语, 比较浅显易懂\\n<$cards filter=\\\"[[GettingStarted]] [!is[system]!has[draft.of]!sort[modified]!is[shadow]limit[8]]\\\" />\\n```\\n\\n> 图片默认使用每个tiddler的page-cover字段, 如果page-cover字段不存在, 则使用 `https://source.unsplash.com/random/1920x1080?fm=blurhash&${title}`\\n\\n> 依赖插件: tailwindcss\\n\\n> 默认使用(16:9)1920x1080的分辨率(分辨率越大, 图片加载速度就相对较慢)\\n\\n> 已经借助tailwindcss对页面进行了防抖动处理\\n\\n> 之所以目前仅仅显示图片, 而不是像notion的gallery布局, 是因为由于filter的不同会导致不同的样式, 此插件目前处于beta阶段, 暂时不打算支持类似notion的动态字段配置(时间有限, 理论上是完全可以做到)\\n\\n!! Recipes\\n\\n> 每个tiddler的标题不要像论文标题那样过长(也许我正文的部分还没你的标题长 😀), 尽量简短扼要\\n\\n!! 显示最近更新动态\\n\\n<$cards />\\n\\n!! 最近的日志\\n\\n<$cards filter=\\\"[tag[Journal]limit[9]]\\\"/>\\n\\n<!-- > 其实使用wikitext可以很快写一个, 但是wikitext的enlist, set, var(用法), 每次都记不住(文档搜索真的不好用), 头疼 -->\\n<!-- 会有闪烁, 由于tailwindcss为加载完成应用样式 -->\\n\\n<!-- 事实证明js写的widget更具有扩展性,灵活性 -->\\n\"},\"$:/plugins/oeyoews/neotw-recent-cards/widget.js\":{\"title\":\"$:/plugins/oeyoews/neotw-recent-cards/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-recent-cards/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nneotw-recent-cards widget\\n\\n\\\\*/\\n(function () {\\n  /*jslint node: true, browser: true */\\n\\n  /*global $tw: false */\\n  'use strict';\\n\\n  const Widget = require('$:/core/modules/widgets/widget.js').widget;\\n\\n  class cardsWidget extends Widget {\\n    constructor(parseTreeNode, options) {\\n      super(parseTreeNode, options);\\n      // TODO: 预设配置化\\n      this.maxCards = 30;\\n      this.tiddlersLength = $tw.wiki.filterTiddlers(\\n        '[!is[system]!has[draft.of]]',\\n      ).length;\\n    }\\n\\n    render(parent, nextSibling) {\\n      if (!$tw.browser) return;\\n\\n      this.parentDomNode = parent;\\n      this.computeAttributes();\\n      this.execute();\\n\\n      const wiki = $tw.wiki;\\n\\n      const defaultFilter =\\n        '[!is[system]!has[draft.of]!sort[modified]limit[9]]';\\n      const filter = this.getAttribute('filter', defaultFilter);\\n      const recentTiddlers = wiki.filterTiddlers(filter);\\n\\n      const data = recentTiddlers.map((tiddler) => {\\n        const { fields } = wiki.getTiddler(tiddler);\\n        // just support online images\\n        let cover = fields['page-cover'];\\n        if (!cover || !cover.startsWith('http')) {\\n          cover = `https://source.unsplash.com/random/1920x1080?fm=blurhash&${fields.title}`;\\n        }\\n        return {\\n          title: fields.title,\\n          cover,\\n        };\\n      });\\n\\n      const container = document.createElement('div');\\n      container.classList.add(\\n        'grid',\\n        'grid-cols-1',\\n        'sm:grid-cols-2',\\n        'md:grid-cols-3',\\n        'gap-8',\\n        'm-4',\\n      );\\n\\n      // 必须使用箭头函数\\n      // TODO: 会触发notebook theme的closing\\n      const navigate = (title) => {\\n        this.parentWidget.dispatchEvent({\\n          type: 'tm-navigate',\\n          param: title,\\n          navigateTo: title,\\n        });\\n        return false;\\n      };\\n\\n      function createCard(title, cover) {\\n        const item = document.createElement('div');\\n        item.classList.add(\\n          'flex',\\n          'flex-col',\\n          'items-center',\\n          'justify-center',\\n          'group',\\n          'relative',\\n          'p-0',\\n        );\\n        const h3 = document.createElement('h3');\\n        h3.title = '点击查看';\\n        h3.classList.add(\\n          'delay-100',\\n          'text-lg',\\n          'cursor-pointer',\\n          'flex',\\n          'justify-center',\\n          'items-center',\\n          'truncate',\\n          'm-0',\\n          'inset-0',\\n          'absolute',\\n          'bg-black',\\n          'backdrop-blur',\\n          'bg-opacity-50',\\n          'text-white',\\n          'rounded-md',\\n          'scale-0',\\n          'ease-in-out',\\n          'transition-all',\\n          'group-hover:scale-105',\\n        );\\n        h3.textContent = title;\\n        h3.addEventListener('click', () => navigate(title));\\n        const img = document.createElement('img');\\n        img.loading = 'lazy';\\n        const dynamicClassNames = ['scale-105', 'blur-lg', 'bg-black/10'];\\n        img.classList.add(\\n          'aspect-video',\\n          'object-cover',\\n          'w-full',\\n          'h-full',\\n          'rounded-md',\\n          'group-hover:scale-105',\\n          'transition-all',\\n          'duration-800',\\n          'ease-in-out',\\n          ...dynamicClassNames,\\n          // 'bg-gradient-to-r', 'from-teal-100', 'to-lime-200',\\n        );\\n\\n        // img.src =\\n        //   'https://images.unsplash.com/photo-1505860125062-3ce932953cf5?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=270&ixid=MnwxfDB8MXxyYW5kb218MHx8Zm0sc2VhfHx8fHx8MTY5NTEzNjk4NQ&ixlib=rb-4.0.3&q=80&utm_campaign=api-credit&utm_medium=referral&utm_source=unsplash_source&w=480';\\n\\n        img.alt = title;\\n        img.src = cover;\\n        item.appendChild(img);\\n        img.onload = () => {\\n          img.classList.remove(...dynamicClassNames);\\n          item.appendChild(h3);\\n        };\\n\\n        return item;\\n      }\\n\\n      if (recentTiddlers.length > this.maxCards) {\\n        console.warn(\\n          `${recentTiddlers.length} 张卡片即将渲染, 超过最大限制 ${this.maxCards} @neotw-recent-cards`,\\n        );\\n      }\\n\\n      data.forEach(({ title, cover }, index) => {\\n        /* 防止用户渲染过多的卡片, */\\n        if (index >= this.maxCards) {\\n          return;\\n        }\\n        container.appendChild(createCard(title, cover));\\n      });\\n\\n      parent.insertBefore(container, nextSibling);\\n      this.domNodes.push(container);\\n    }\\n\\n    // 如果新增或者删除tiddler, 进行重新渲染(重命名不会)\\n    // TODO: 粒度更细 -> 使用传入的filter的length\\n    refresh() {\\n      let tiddlersLength = $tw.wiki.filterTiddlers(\\n        '[!is[system]!has[draft.of]]',\\n      ).length;\\n      if (tiddlersLength !== this.tiddlersLength) {\\n        this.refreshSelf();\\n        this.tiddlersLength = tiddlersLength;\\n      }\\n    }\\n  }\\n\\n  exports.cards = cardsWidget;\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}