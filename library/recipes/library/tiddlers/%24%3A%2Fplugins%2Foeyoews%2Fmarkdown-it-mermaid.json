{"title":"$:/plugins/oeyoews/markdown-it-mermaid","description":"markdown-it-mermaid","author":"oeyoews","version":"0.0.1","core-version":">=5.3.0","type":"application/json","plugin-type":"plugin","name":"markdown-it-mermaid","meat#disabled":"yes","qrcode":"yes","created":"2024-01-28","parent-plugin":"$:/plugins/oeyoews/markdown-extensions-startup","list":"readme","dependents":"","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/markdown-it-mermaid/readme\":{\"title\":\"$:/plugins/oeyoews/markdown-it-mermaid/readme\",\"text\":\"## markdownit mermaid\\n\\n```mermaid forest\\n---\\ntitle: plugin dependencies\\n---\\ngraph LR;\\na[(markdown)] --> markdown-it-mermaid & orange/mermaid-tw5 & markdown-extensions-startup\\n\\t\\tlinkStyle 0 stroke:red;\\n\\t\\tlinkStyle 1 stroke:blue;\\n\\t\\tlinkStyle 2 stroke:yellow;\\n```\\n\\n## Motivation\\n\\nAlthough I can use mermaid through `<$mermaid text=\\\"xxx\\\" />` or `$$$$text/vnd.tiddlywiki/mermaid xxxx$$$`, or create a new type of text/vnd.tiddlywiki/mermaid tiddler, but these are not very convenient for me.\\n\\nAnd there are some areas in the original mermaid plugin that I would like to improve, but I have not rewritten that plugin. I created a markdown-it-mermaid plugin suitable for tiddlywiki. Fortunately, github also supports this format, so I can not only browse in tiddlywiki, but users on GitHub can also view mermaid\\n\\n![img](https://talk.tiddlywiki.org/uploads/default/original/2X/b/b7e4e40f767fb0a27dc5839a1540942808e5c9fc.gif)\",\"type\":\"text/markdown\",\"description\":\"markdown-it-mermaid\"},\"$:/plugins/oeyoews/markdown-it-mermaid/markdown-it-mermaid.js\":{\"title\":\"$:/plugins/oeyoews/markdown-it-mermaid/markdown-it-mermaid.js\",\"text\":\"module.exports=e=>{const{mermaidAPI:r}=require(\\\"$:/plugins/orange/mermaid-tw5/mermaid.min.js\\\");if(!r)return void console.warn(\\\"please install orange/mermaid-tw5 tiddlywiki plugin\\\");e.mermaid=r;const i=e.renderer.rules.fence;e.renderer.rules.fence=(e,t,n,m,d)=>{const a=e[t],l=a.content.trim(),[s,o,...u]=a.info.split(\\\" \\\");if(\\\"mermaid\\\"!==s.trim())return i(e,t,{},m,d);if(\\\"mermaid\\\"===s.trim())try{const e={securityLevel:\\\"loose\\\",theme:o||\\\"default\\\",htmlLabels:!0};return r.initialize(e),((e,i)=>`<div>${r.render(\\\"mermaid_\\\"+i,e)}</div>`)(l,t)}catch(e){return`<pre>${l}</pre>`}}};\",\"type\":\"application/javascript\",\"module-type\":\"markdownit\"}}}"}