{"title":"$:/plugins/oeyoews/notebook-theme-sidebar-resizer","description":"notebook-theme-sidebar-resizer","author":"oeyoews","version":"0.0.7","core-version":">=5.3.1","type":"application/json","plugin-type":"plugin","name":"notebook theme sidebar resizer","meat#disabled":"yes","qrcode":"yes","created":"2023-12-19","dependents":"$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus","list":"readme","text":"{\"tiddlers\":{\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/readme\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/readme\",\"text\":\"## Notebook theme sidebar resizer\\n\\n- support left/right sidebar resizer\\n\\n## TODO\\n\\n- use css file instead of tailwindcss plugin dependency\\n- 拖动时,光标样式会抖动\\n\\n## Motivation\\n\\n- 希望 notebook theme 也可以自由拖动从而调整侧边栏.\\n\",\"type\":\"text/markdown\",\"description\":\"notebook-theme-sidebar-resizer\"},\"$:/themes/nico/notebook/ui/Sidebar/resizer\":{\"title\":\"$:/themes/nico/notebook/ui/Sidebar/resizer\",\"tags\":\"$:/themes/nico/notebook/tags/Sidebar $:/tags/SideBarSegment\",\"text\":\"<!-- to widget  -->\\n<!-- <div id='om-resizer' class=\\\"hover:cursor-ew-resize hover:bg-gray-200 bg-red-300 h-full w-[5px] absolute top-0 right-0\\\"></div> -->\\n<$nbresizer />\"},\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/default-sidebar-width\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/default-sidebar-width\",\"text\":\"300px\"},\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/en.js\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/en.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/en.js\\ntype: application/javascript\\nmodule-type: library\\n\\nnotebook-theme-sidebar-resizer locale en\\n\\\\*/\\n\\nmodule.exports = {\\n  pluginname: 'notebook-theme-sidebar-resizer',\\n  warning:\\n    \\\"[notebook-theme-sidebar-resizer]: requires the 'tiddlywiki/tailwindcss-plus' plugin to be installed\\\",\\n};\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/zh.js\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/zh.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/notebook-theme-sidebar-resizer/locales/zh.js\\ntype: application/javascript\\nmodule-type: library\\n\\nnotebook-theme-sidebar-resizer locale zh\\n\\\\*/\\n\\nmodule.exports = {\\n  pluginname: '侧边栏宽度调整插件',\\n  warning: '需要安装tailwindcss',\\n};\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/widget.js\":{\"title\":\"$:/plugins/oeyoews/notebook-theme-sidebar-resizer/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/notebook-theme-sidebar-resizer/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nnotebook-theme-sidebar-resizer widget\\n\\\\*/\\n\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\nconst en = require('./locales/en');\\n\\nclass NotebookResizer extends Widget {\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n    this.themeTiddler = '$:/theme';\\n    this.theme = null;\\n    this.isResizing = false;\\n    this.notebookWidthTiddler = '$:/themes/nico/notebook/metrics/sidebar-width';\\n    this.vanillaWidthTiddler =\\n      '$:/themes/tiddlywiki/vanilla/metrics/sidebarwidth';\\n    this.positionTiddler = '$:/themes/nico/notebook/metrics/sidebar-position';\\n    this.notebookStateSidebar = '$:/state/notebook-sidebar';\\n    this.vanillaStateSidebar = '$:/state/sidebar';\\n    this.defaultTiddler =\\n      '$:/plugins/oeyoews/notebook-theme-sidebar-resizer/default-sidebar-width';\\n    this.width = 0;\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n    this.parentDomNode = parent;\\n    this.computeAttributes();\\n    this.execute();\\n\\n    this.checker();\\n    const theme = this.checkTheme();\\n\\n    console.log(theme);\\n    const createElement = $tw.utils.domMaker;\\n\\n    // NOTE: Tailwindcss class here, if you dont want install the extra tailwindcss dependency, you can rewrite it use general style()\\n    const resizer = createElement('div', {\\n      class:\\n        'hover:cursor-ew-resize bg-gray-100 dark:bg-gray-500 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-full transition-all h-full w-[5px] absolute top-0',\\n    });\\n    // update theme\\n    this.theme = theme;\\n\\n    if (this.getSidebarPosition() === 'left') {\\n      resizer.classList.add('right-0');\\n    } else {\\n      resizer.classList.add('left-0');\\n    }\\n\\n    resizer.addEventListener('pointerdown', (e) => {\\n      e.preventDefault(); // prevent select text on move sidebar width\\n\\n      this.isResizing = true;\\n      document.addEventListener('pointermove', (e) => this.resize(e));\\n      document.addEventListener('pointerup', (e) => this.stopResize(e));\\n    });\\n\\n    parent.insertBefore(resizer, nextSibling);\\n    this.domNodes.push(resizer);\\n  }\\n\\n  checkTheme() {\\n    const currentTiddler = $tw.wiki.getTiddlerText(this.themeTiddler);\\n    if (\\n      currentTiddler === '$:/themes/nico/notebook' ||\\n      currentTiddler === '$:/themes/oeyoews/notebook-plus' // for my custom notebook theme\\n    ) {\\n      return 'notebook';\\n    } else {\\n      return 'vanilla';\\n    }\\n  }\\n\\n  getSidebarPosition() {\\n    if (this.theme === 'vanilla') {\\n      return 'right';\\n    }\\n    if (!$tw.wiki.tiddlerExists(this.positionTiddler)) {\\n      return 'left';\\n    }\\n    const { position = 'left' } = $tw.wiki.getTiddler(\\n      this.positionTiddler,\\n    ).fields;\\n    return position;\\n  }\\n\\n  getDefaultSidebarWidth() {\\n    return $tw.wiki.getTiddlerText(this.defaultTiddler).replace('px', '');\\n  }\\n\\n  resize(e) {\\n    const clientX = e.clientX;\\n    if (this.isResizing) {\\n      if (this.getSidebarPosition() === 'left') {\\n        this.width = clientX;\\n      } else {\\n        this.width = window.innerWidth - clientX;\\n      }\\n      if (this.width / window.innerWidth > 0.75) {\\n        return;\\n      }\\n      if (this.width / window.innerWidth < 0.05) {\\n        this.closeSidebar();\\n        this.isResizing = false;\\n        return;\\n      }\\n      this.updateSidebarWidth(this.width);\\n    }\\n  }\\n\\n  stopResize(e) {\\n    this.isResizing = false;\\n    document.removeEventListener('pointermove', (e) => this.resize(e));\\n  }\\n\\n  closeSidebar() {\\n    const stateTiddler =\\n      this.theme === 'notebook'\\n        ? this.notebookStateSidebar\\n        : this.vanillaStateSidebar;\\n    $tw.wiki.setText(stateTiddler, 'text', null, 'no');\\n    this.updateSidebarWidth(this.getDefaultSidebarWidth());\\n  }\\n\\n  updateSidebarWidth(width) {\\n    const targetTiddler =\\n      this.theme === 'notebook'\\n        ? this.notebookWidthTiddler\\n        : this.vanillaWidthTiddler;\\n    requestAnimationFrame(() => {\\n      $tw.wiki.setText(\\n        targetTiddler,\\n        null,\\n        null,\\n        `${Number(width).toFixed(0)}px`,\\n      );\\n    });\\n  }\\n\\n  checker() {\\n    const logger = new $tw.utils.Logger(en.pluginname);\\n    if (!$tw.modules.titles['tailwindcss.min.js']) {\\n      logger.alert(en.warning);\\n    }\\n  }\\n\\n  refresh(changedTiddlers) {\\n    // TODO: refresh on change tw languages\\n    const tiddlers = Object.keys(changedTiddlers);\\n    if (\\n      tiddlers.includes(this.positionTiddler) ||\\n      tiddlers.includes('$:/language') ||\\n      tiddlers.includes(this.themeTiddler)\\n    ) {\\n      this.refreshSelf();\\n      return true;\\n    }\\n    return false;\\n  }\\n}\\n\\nexports.nbresizer = NotebookResizer;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}